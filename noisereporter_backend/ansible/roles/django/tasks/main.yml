---
  - include_vars: private_files.yml

  - name: Create the SSH directory.
    sudo_user: "{{ deployment_name }}"
    file: state=directory path=/home/{{deployment_name}}/.ssh/

  - name: Upload SSH known hosts.
    sudo_user: "{{ deployment_name }}"
    copy: src=known_hosts dest="/home/{{ deployment_name }}/.ssh/known_hosts" mode=0600

  - name: Upload SSH key.
    sudo_user: "{{ deployment_name }}"
    copy: content="{{ ssh_key }}" dest="/home/{{ deployment_name }}/.ssh/id_rsa" mode=0600

  - name: ensure github.com is a known host
    lineinfile:
      dest: /home/{{ deployment_name }}/.ssh/known_hosts
      create: yes
      state: present
      line: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
      regexp: "^github\\.com"

  - name: Pull sources from the repository.
    git: repo="{{project_repo}}" dest="/home/{{deployment_name}}/{{ mode }}" version="{{branch}}" accept_hostkey=yes force=yes
    sudo_user: "{{deployment_name}}"
    register: git
    when: mode != 'local'
    tags:
      - deploy
      - clone

  - name: Create manage.py
    template: src=manage.py dest="/home/{{deployment_name}}/{{mode}}/noisereporter_backend/"

  - name: Upgrade the Virtualenv.
    pip: executable="pip3" requirements="/home/{{deployment_name}}/{{ mode }}/noisereporter_backend/requirements.txt" virtualenv=/home/{{deployment_name}}/{{ mode }}/env/
    sudo_user: "{{deployment_name}}"
    register: venv
    tags:
      - deploy
      - reqs

  - name: Sync Django database.
    django_manage: command=syncdb app_path=/home/{{deployment_name}}/{{mode}}/noisereporter_backend/ settings={{deployment_name}}.settings.{{ mode }}  virtualenv=/home/{{deployment_name}}/{{ mode }}/noisereporter_backend/env/
    sudo_user: "{{deployment_name}}"
    environment: 
        NOISEREPORT_DB_USER: "{{db_user}}"
        NOISEREPORT_DB_PASSWORD: "{{db_password}}"
    when: mode != 'local'
    tags:
      - deploy
      - syncdb

  - name: Migrate Django database.
    django_manage: command=migrate app_path=/home/{{ deployment_name }}/{{mode}}/noisereporter_backend/ settings={{ deployment_name }}.settings.{{mode}}  virtualenv=/home/{{deployment_name}}/{{ mode }}/noisereporter_backend/env/
    sudo_user: "{{deployment_name}}"
    environment: 
        NOISEREPORT_DB_USER: "{{db_user}}"
        NOISEREPORT_DB_PASSWORD: "{{db_password}}"
    when: mode != 'local'
    tags:
      - deploy
      - migrate

  - name: Generate Django media.
    django_manage: command=collectstatic app_path=/home/{{ deployment_name }}/{{mode}}/noisereporter_backend/ settings={{ deployment_name}}.settings.{{mode}} virtualenv=/home/{{deployment_name}}/{{mode}}/noisereporter_backend/env/
    sudo_user: "{{deployment_name}}"
    environment: 
        NOISEREPORT_DB_USER: "{{db_user}}"
        NOISEREPORT_DB_PASSWORD: "{{db_password}}"
    tags:
      - deploy
      - collectstatic

  - name: Start the service
    service: name={{deployment_name}}_{{mode}} state=restarted
    tags:
      - deploy
      - restart
